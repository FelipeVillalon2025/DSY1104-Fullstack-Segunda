import { useEffect, useState, useContext } from 'react';
import { Link } from 'react-router-dom';
import { CartContext } from '../../context/CartContext';
import { toast } from 'react-toastify';
import { Navbar } from '../../componentes/Navbar/Navbar';
import './Shop.css';

export function Shop() {
    const [productos, setProductos] = useState([]);
    const [error, setError] = useState(null);
    const [loading, setLoading] = useState(true);
    const { addToCart } = useContext(CartContext);
 
    const cargarProductos = async () => {
        setError(null);
        setLoading(true);
        try {
            const response = await fetch('http://localhost:8080/api/productos');
            if (!response.ok) {
                throw new Error(`Error ${response.status}: ${response.statusText}`);
            }

            const data = await response.json();
            console.log("Respuesta del backend:", data);

            const productosNormalizados = data.map(p => ({
                ...p,
                activo: p.activo === true || p.activo === 'true',
            }));

            setProductos(productosNormalizados);
        } catch (error) {
            console.error('Error al obtener los productos:', error);
            setError(error.message);
            toast.error(`Error al cargar productos: ${error.message}`);
        } finally {
            setLoading(false);
        }
    };
 
    useEffect(() => {
        cargarProductos();
    }, []);

    const handleAddToCart = (producto) => {
        addToCart(producto);
        toast.success(`${producto.nombre} añadido al carrito`);
    };

    return (
        <>
            <Navbar />
            <div className="container mt-4">
                <h3 className="mb-4">Catálogo de productos</h3>
                {loading ? (
                    <div className="text-center">
                        <div className="spinner-border text-primary" role="status">
                            <span className="visually-hidden">Cargando...</span>
                        </div>
                    </div>
                ) : error ? (
                    <div className="alert alert-danger" role="alert">
                        {error}
                    </div>
                ) : productos.length === 0 ? (
                    <div className="alert alert-info" role="alert">
                        No hay productos disponibles en este momento.
                    </div>
                ) : (
                    <div className="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
                        {productos.filter(prod => prod.activo).map((prod) => (
                            <div key={prod.id} className="col">
                                <div className="card h-100">
                                    {prod.imagen ? (
                                        <img 
                                            src={prod.imagen} 
                                            className="card-img-top" 
                                            alt={prod.nombre} 
                                            style={{height: '200px', objectFit: 'cover'}}
                                        />
                                    ) : (
                                        <div className="card-img-top d-flex align-items-center justify-content-center bg-light" style={{height: '200px'}}>
                                            <i className="bi bi-image text-muted" style={{fontSize: '3rem'}}></i>
                                        </div>
                                    )}
                                    <div className="card-body">
                                        <h5 className="card-title">{prod.nombre}</h5>
                                        <p className="card-text">{prod.descripcion}</p>
                                        <p className="card-text">
                                            <strong className="text-primary">${prod.precio}</strong>
                                        </p>
                                        <button 
                                            className="btn btn-primary w-100"
                                            onClick={() => handleAddToCart(prod)}
                                        >
                                            <i className="bi bi-cart-plus me-2"></i>
                                            Agregar al carrito
                                        </button>
                                    </div>
                                </div>
                            </div>
                        ))}
                    </div>
                )}
            </div>
        </>
    );
}